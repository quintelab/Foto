<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.17">

  <!-- ******************* -->
  <!-- Rounded Control Bar -->
  <!-- ******************* -->

  <krpano roundcornerbarbuilt="false" roundcornerbarnbbuttons="0" roundcornerbarIsOpened="false" />

  <events name="roundcornerbarevents" onxmlcomplete="roundcornerbarbuildMenuBar();" keep="true"/>
  <action name="roundcornerbarbuildMenuBar">
    ifnot (roundcornerbarbuilt, roundcornerbarbuildMenu(); set(roundcornerbarbuilt, true););
  </action>

  <action name="roundcornerbarbuildMenu">
    txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));

    if (roundcornerbarnbbuttons LT 6,
      if (scene.count GT 1,
        set(layer[roundcornerbarbtn_prev_pano].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_prev_pano].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_prev_pano].y     , get(plugin[get(btnbgname)].childy));
        inc(roundcornerbarnbbuttons);
        txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));

        set(layer[roundcornerbarbtn_next_pano].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_next_pano].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_next_pano].y     , get(plugin[get(btnbgname)].childy));
        inc(roundcornerbarnbbuttons);
        txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));
      );
    ,
      set(layer[roundcornerbarbtn_next_pano].disabled, true);
      set(layer[roundcornerbarbtn_prev_pano].disabled, true);
    );






    if (roundcornerbarnbbuttons LT 6,
      set(layer[roundcornerbarbtn_autorotate_on ].parent, get(btnbgname));
      set(layer[roundcornerbarbtn_autorotate_on ].x     , get(plugin[get(btnbgname)].childx));
      set(layer[roundcornerbarbtn_autorotate_on ].y     , get(plugin[get(btnbgname)].childy));
      set(layer[roundcornerbarbtn_autorotate_off].parent, get(btnbgname));
      set(layer[roundcornerbarbtn_autorotate_off].x     , get(plugin[get(btnbgname)].childx));
      set(layer[roundcornerbarbtn_autorotate_off].y     , get(plugin[get(btnbgname)].childy));
      inc(roundcornerbarnbbuttons);
      txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));
    ,
      set(layer[roundcornerbarbtn_autorotate_on].disabled, true);
      set(layer[roundcornerbarbtn_autorotate_off].disabled, true);
    );



    if (roundcornerbarnbbuttons LT 6,
      if (device.desktop,
        set(layer[roundcornerbarbtn_ctrlmode_drag_to].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_ctrlmode_drag_to].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_ctrlmode_drag_to].y     , get(plugin[get(btnbgname)].childy));
        set(layer[roundcornerbarbtn_ctrlmode_move_to].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_ctrlmode_move_to].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_ctrlmode_move_to].y     , get(plugin[get(btnbgname)].childy));
        inc(roundcornerbarnbbuttons);
        txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));
      );
    ,
      set(layer[roundcornerbarbtn_ctrlmode_drag_to].disabled, true);
      set(layer[roundcornerbarbtn_ctrlmode_move_to].disabled, true);
    );



    if (roundcornerbarnbbuttons LT 6,
      if (device.desktop,
        set(layer[roundcornerbarbtn_display_help].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_display_help].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_display_help].y     , get(plugin[get(btnbgname)].childy));
        set(layer[roundcornerbarbtn_close_help  ].parent, get(btnbgname));
        set(layer[roundcornerbarbtn_close_help  ].x     , get(plugin[get(btnbgname)].childx));
        set(layer[roundcornerbarbtn_close_help  ].y     , get(plugin[get(btnbgname)].childy));
        inc(roundcornerbarnbbuttons);
        txtadd(btnbgname, "roundcornerbarbtnbg", get(roundcornerbarnbbuttons));
      );
    ,
      set(layer[roundcornerbarbtn_display_help].disabled, true);
      set(layer[roundcornerbarbtn_close_help].disabled, true);
    );

	

  </action>

<events name="roundcornerbarStartTourEvents" onTourStart="roundcornerbarCallOnStartTour();" keep="true" />

<action name="roundcornerbarCallOnStartTour">
	
	roundcornerbarshowMenuControls();
</action>

  <layer name="roundcornerbarmenu_roundcorner_bg"
          keep="true"
          url="%FIRSTXML%/graphics/roundcornerbar/footer.png"
          zorder="0"
          align="bottomright"
          handcursor="false"
          edge="right"
          x="0"
          y="0"
          rotate="180"
          capture="false"
          visible="false" />

  <style name="roundcornerbar_btn_style"
         keep="true"
         align="bottomright"
         onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
         zorder="2"
         />

  <style name="roundcornerbarbtnbgstyle" keep="true" pixelhittest="true" align="bottomright" zorder="1" alpha="0" />

  <layer name="roundcornerbarbtnbg0" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_1.png" style="roundcornerbarbtnbgstyle" x="144" y="0"   childx="10" childy="6"  crop="0|0|48|49" onovercrop="0|49|48|49" ondowncrop="0|98|48|49" visible="false" />
  <layer name="roundcornerbarbtnbg1" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_2.png" style="roundcornerbarbtnbgstyle" x="129" y="39"  childx="14" childy="10" crop="0|0|56|56" onovercrop="0|56|56|56" ondowncrop="0|112|56|56" visible="false" />
  <layer name="roundcornerbarbtnbg2" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_3.png" style="roundcornerbarbtnbgstyle" x="106" y="75"  childx="15" childy="14" crop="0|0|60|60" onovercrop="0|60|60|60" ondowncrop="0|120|60|60" visible="false" /> 
  <layer name="roundcornerbarbtnbg3" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_4.png" style="roundcornerbarbtnbgstyle" x="75"  y="106" childx="14" childy="15" crop="0|0|60|60" onovercrop="0|60|60|60" ondowncrop="0|120|60|60" visible="false" />
  <layer name="roundcornerbarbtnbg4" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_5.png" style="roundcornerbarbtnbgstyle" x="39"  y="129" childx="10" childy="14" crop="0|0|56|56" onovercrop="0|56|56|56" ondowncrop="0|112|56|56" visible="false" />
  <layer name="roundcornerbarbtnbg5" url="%FIRSTXML%/graphics/roundcornerbar/btn_round_corner_6.png" style="roundcornerbarbtnbgstyle" x="0"   y="144" childx="6"  childy="10" crop="0|0|48|48" onovercrop="0|48|48|48" ondowncrop="0|96|48|48" visible="false" />


  <layer name="roundcornerbarbtn_prev_pano"
         url="%FIRSTXML%/graphics/roundcornerbar/btn_previous_scene.png"
         onclick="loadPreviousScene();"
         style="roundcornerbar_btn_style"
         visible="false"
         tooltip="controlBar_roundedprevSceneTip"
         />
  <layer name="roundcornerbarbtn_next_pano"
         url="%FIRSTXML%/graphics/roundcornerbar/btn_next_scene.png"
         onclick="loadNextScene();"
         style="roundcornerbar_btn_style"
         visible="false"
         tooltip="controlBar_roundednextSceneTip"
         />






  <layer name="roundcornerbarbtn_autorotate_on"
          url="%FIRSTXML%/graphics/roundcornerbar/btn_start_autorotation.png"
          onclick="startautorotation();"
          style="roundcornerbar_btn_style"
          visible="false"
          tooltip="controlBar_roundedautorotateOnTip"
          />
  <layer name="roundcornerbarbtn_autorotate_off"
          url="%FIRSTXML%/graphics/roundcornerbar/btn_stop_autorotation.png"
          onclick="stopautorotation();"
          style="roundcornerbar_btn_style"
          visible="false"
          tooltip="controlBar_roundedautorotateOffTip"
          />

	<events name="roundcornerbarAutorotationEvents"
		onstartautorotation="roundcornerbarupdateAutorotationButtons();"
		onresumeautorotation="roundcornerbarupdateAutorotationButtons();"
		onstopautorotation="roundcornerbarupdateAutorotationButtons();"
		onpauseautorotation="roundcornerbarupdateAutorotationButtons();"
		keep="true"/>
	<action name="roundcornerbarHideAutorotationButtons">
		set(layer[roundcornerbarbtn_autorotate_off].visible, false);
		set(layer[roundcornerbarbtn_autorotate_on].visible , false);
	</action>
	<action name="roundcornerbarShowAutorotationButtons">
		if(tour_autorotateenabled==false,
			set(layer[roundcornerbarbtn_autorotate_off].visible, false);
			set(layer[roundcornerbarbtn_autorotate_on].visible , true);
		,
			set(layer[roundcornerbarbtn_autorotate_off].visible, true);
			set(layer[roundcornerbarbtn_autorotate_on].visible , false);
		);
	</action>
	<action name="roundcornerbarupdateAutorotationButtons">
		set(roundcornerbarDisplayAutorotationButtons, false);
		if (roundcornerbarIsOpened, set(roundcornerbarDisplayAutorotationButtons, true););
		if (roundcornerbarDisplayAutorotationButtons,
			roundcornerbarShowAutorotationButtons();
		,
			roundcornerbarHideAutorotationButtons();
		);
	</action>



  <events name="roundcornerbarcontrolmodechangeevent"
          oncontrolmodechanged="roundcornerbarupdateControlModeButtons();"
          keep="true"/>
	<action name="roundcornerbarHideControlModeButtons">
		set(layer[roundcornerbarbtn_ctrlmode_move_to].visible, false);
		set(layer[roundcornerbarbtn_ctrlmode_drag_to].visible, false);
	</action>
	<action name="roundcornerbarShowControlModeButtons">
		if (tour_controlmodemousetype == "moveto",
			set(layer[roundcornerbarbtn_ctrlmode_drag_to].visible, true);
			set(layer[roundcornerbarbtn_ctrlmode_move_to].visible, false);
		,
			set(layer[roundcornerbarbtn_ctrlmode_move_to].visible, true);
			set(layer[roundcornerbarbtn_ctrlmode_drag_to].visible, false);
		);
	</action>
	<action name="roundcornerbarupdateControlModeButtons">
	if (device.desktop,
		set(roundcornerbarDisplayControlModeButtons, false);
		if (roundcornerbarIsOpened, set(roundcornerbarDisplayControlModeButtons, true););
		if (roundcornerbarDisplayControlModeButtons,
			roundcornerbarShowControlModeButtons();
		,
			roundcornerbarHideControlModeButtons();
		);
	,
		roundcornerbarHideControlModeButtons();
	);
	</action>
  <layer name="roundcornerbarbtn_ctrlmode_move_to"
          url="%FIRSTXML%/graphics/roundcornerbar/btn_move_to.png"
          style="roundcornerbar_btn_style"
          tooltip="controlBar_roundedctrlmodeMoveTip"
          onclick="setControlMode(moveto);"
          visible="false"
          devices="desktop"
          />
  <layer name="roundcornerbarbtn_ctrlmode_drag_to"
          url="%FIRSTXML%/graphics/roundcornerbar/btn_drag_to.png"
          style="roundcornerbar_btn_style"
          tooltip="controlBar_roundedctrlmodeDragTip"
          onclick="setControlMode(drag2d);"
          visible="false"
          devices="desktop"
          />

    <layer name="roundcornerbarbtn_display_help"
            url="%FIRSTXML%/graphics/roundcornerbar/btn_help.png"
            onclick="roundcornerbardisplayHelp();"
            style="roundcornerbar_btn_style"
            visible="false"
            tooltip="controlBar_roundeddisplayHelpTip"
            devices="desktop"
            />
    <layer name="roundcornerbarbtn_close_help"
            url="%FIRSTXML%/graphics/roundcornerbar/btn_help.png"
            onclick="roundcornerbarcloseHelp();"
            style="roundcornerbar_btn_style"
            tooltip="controlBar_roundedhideHelpTip"
            devices="desktop"
            visible="false"
            />




  <style name="roundcornerbarroundcorner_btn_nav_style"
         keep="true"
         pixelhittest="true"
         onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
         />

  
  <layer name="roundcornerbarmenu_navigation_bg"
          keep="true"
          type="container"
          zorder="1"
          align="bottomright"
          edge="bottomright"
          x="10"
          y="10"
          width="102"
          height="102"
          visible="true"
          capture="false">

    <layer name="roundcornerbarbtn_in"
         zorder="1"
            url="%FIRSTXML%/graphics/roundcornerbar/btn_zoom_in.png"
            style="roundcornerbarroundcorner_btn_nav_style"
            crop="0|0|66|33"
            onovercrop="0|33|66|33"
            ondown="set(fov_moveforce, -1);"
            onup="set(fov_moveforce, 0);"
            x="0" y="0"
            edge="bottom"
            align="center"
            visible="false"
            tooltip="controlBar_roundedzoomInTip"
             />
    <layer name="roundcornerbarbtn_out"
         zorder="1"
            url="%FIRSTXML%/graphics/roundcornerbar/btn_zoom_out.png"
            style="roundcornerbarroundcorner_btn_nav_style"
            crop="0|0|66|33"
            onovercrop="0|33|66|33"
            ondown="set(fov_moveforce, +1);"
            onup="set(fov_moveforce, 0);"
            x="0" y="0"
            edge="top"
            align="center"
            visible="false"
            tooltip="controlBar_roundedzoomOutTip"
             />

    <layer name="roundcornerbarbtn_left"
           zorder="0"
           ondown="set(hlookat_moveforce, -1);"
           onup="set(hlookat_moveforce, 0);"
            url="%FIRSTXML%/graphics/roundcornerbar/btn_move_left.png"
            style="roundcornerbarroundcorner_btn_nav_style"
            crop="0|0|29|74"
            onovercrop="0|74|29|74"
            x="0" y="0"
            edge="left"
            align="left"
            visible="false"
            tooltip="controlBar_roundedmoveLeftTip"
            />
    <layer name="roundcornerbarbtn_right"
           zorder="0"
           ondown="set(hlookat_moveforce, +1);"
           onup="set(hlookat_moveforce, 0);"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_move_right.png"
           style="roundcornerbarroundcorner_btn_nav_style"
           crop="0|0|29|74"
           onovercrop="0|74|29|74"
           x="0" y="0"
           edge="right"
           align="right"
           visible="false"
           tooltip="controlBar_roundedmoveRightTip"
           />

    <layer name="roundcornerbarbtn_up"
           zorder="0"
           ondown="set(vlookat_moveforce, -1);"
           onup="set(vlookat_moveforce, 0);"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_move_up.png"
           style="roundcornerbarroundcorner_btn_nav_style"
           crop="0|0|74|29"
           onovercrop="0|29|74|29"
           x="0" y="0"
           align="top"
           edge="top"
           visible="false"
           tooltip="controlBar_roundedmoveUpTip"
           />
    <layer name="roundcornerbarbtn_down"
           zorder="0"
           ondown="set(vlookat_moveforce, +1);"
           onup="set(vlookat_moveforce, 0);"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_move_down.png"
           style="roundcornerbarroundcorner_btn_nav_style"
           crop="0|0|74|29"
           onovercrop="0|29|74|29"
           x="0" y="0"
           edge="bottom"
           align="bottom"
           visible="false"
           tooltip="controlBar_roundedmoveDownTip"
           />

    <layer name="roundcornerbarbtn_hidecontrols"
           onclick="roundcornerbarhideMenuControls();hideTourControls();"
           x="0" y="0"
           keep="true"
           zorder="2"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_hide_controls.png"
                 crop="0| 0|28|28"
           onovercrop="0|28|28|28"
           ondowncrop="0|56|28|28"
           pixelhittest="true"
           edge="center"
           align="center"
           height="28"
           width="28"
           visible="false"
           tooltip="controlBar_roundedhideControlsTip"
           />
    <layer name="roundcornerbarbtn_showcontrols"
           onclick="roundcornerbarshowMenuControls();showTourControls();"
           x="0" y="0"
           keep="true"
           zorder="2"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_show_controls.png"
                 crop="0| 0|28|28"
           onovercrop="0|28|28|28"
           ondowncrop="0|56|28|28"
           pixelhittest="true"
           edge="center"
           align="center"
           visible="false"
           height="28"
           width="28"
           tooltip="controlBar_roundeddisplayControlsTip"
           />
  </layer>

  <style name="roundcornerbarbtn_fs_bg_style" keep="true"
         url="%FIRSTXML%/graphics/roundcornerbar/btn_fs_bg.png"
         align="topright"
         devices="fullscreensupport"
         zorder="0"
         x="0" y="0"
         crop="      0|  0|50|50"
         onovercrop="0| 50|50|50"
         ondowncrop="0|100|50|50"
         onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
         />
  <style name="roundcornerbarbtn_fs_style" keep="true" align="topright"
         devices="fullscreensupport"
         x="5" y="5"
         onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
         />
  <layer name="roundcornerbarbtn_openfs_bg"
         style="roundcornerbarbtn_fs_bg_style"
         onclick="enterFullscreen();"
         visible="false"
         alpha="0"
         tooltip="controlBar_roundedopenFsTip"
          >
    <layer name="roundcornerbarbtn_openfs"
           style="roundcornerbarbtn_fs_style"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_enter_fs.png"
           onclick="enterFullscreen();"
           tooltip="controlBar_roundedopenFsTip"
           />
  </layer>

  <layer name="roundcornerbarbtn_closefs_bg"
          style="roundcornerbarbtn_fs_bg_style"
          visible="false"
          alpha="0"
          onclick="exitFullscreen();"
          tooltip="controlBar_roundedcloseFsTip"
         onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
          >
    <layer name="roundcornerbarbtn_closefs"
           style="roundcornerbarbtn_fs_style"
           url="%FIRSTXML%/graphics/roundcornerbar/btn_close_fs.png"
           onclick="exitFullscreen();"
           tooltip="controlBar_roundedcloseFsTip"
          />
  </layer>

  <events name="roundcornerbarmenufullscreenchangeevent"
          onenterfullscreen="roundcornerbarupdateFullscreenButtons();"
          onexitfullscreen="roundcornerbarupdateFullscreenButtons();"
          keep="true"/>
	<action name="roundcornerbarHideFullscreenButtons">
		tween(layer[roundcornerbarbtn_openfs_bg].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtn_openfs_bg].visible , false));
		tween(layer[roundcornerbarbtn_closefs_bg].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtn_closefs_bg].visible , false));
	</action>
	<action name="roundcornerbarShowFullscreenButtons">
		if (device.fullscreensupport,
			if(tour_fullscreen,
				if(layer[roundcornerbarbtn_openfs_bg].visible,
					set(layer[roundcornerbarbtn_openfs_bg].visible , false);
					set(layer[roundcornerbarbtn_closefs_bg].visible, true);
				,
					set(layer[roundcornerbarbtn_openfs_bg].visible , false);
					set(layer[roundcornerbarbtn_closefs_bg].visible, true);
					tween(layer[roundcornerbarbtn_openfs_bg].alpha, 1, 0.5);
					tween(layer[roundcornerbarbtn_closefs_bg].alpha, 1, 0.5);
				);
			,
				if(layer[roundcornerbarbtn_closefs_bg].visible,
					set(layer[roundcornerbarbtn_openfs_bg].visible ,true);
					set(layer[roundcornerbarbtn_closefs_bg].visible,false);
				,
					set(layer[roundcornerbarbtn_openfs_bg].visible , true);
					set(layer[roundcornerbarbtn_closefs_bg].visible, false);
					tween(layer[roundcornerbarbtn_openfs_bg].alpha, 1, 0.5);
					tween(layer[roundcornerbarbtn_closefs_bg].alpha, 1, 0.5);
				);
			);
		,
			roundcornerbarHideFullscreenButtons();
		);
	</action>
	<action name="roundcornerbarupdateFullscreenButtons">
		set(roundcornerbarDisplayFullscreenButtons, false);
		if (roundcornerbarIsOpened, set(roundcornerbarDisplayFullscreenButtons, true););
		if (roundcornerbarDisplayFullscreenButtons,
			roundcornerbarShowFullscreenButtons();
		,
			roundcornerbarHideFullscreenButtons();
		);
	</action>






  <action name="roundcornerbarhideMenuControls">
    set(roundcornerbarIsOpened, false);
    if (roundcornerbarnbbuttons GT 0,
      stoptween(layer[roundcornerbarmenu_roundcorner_bg].rotate);
      stoptween(layer[roundcornerbarbtnbg0].alpha);
      stoptween(layer[roundcornerbarbtnbg1].alpha);
      stoptween(layer[roundcornerbarbtnbg2].alpha);
      stoptween(layer[roundcornerbarbtnbg3].alpha);
      stoptween(layer[roundcornerbarbtnbg4].alpha);
      stoptween(layer[roundcornerbarbtnbg5].alpha);

      tween(layer[roundcornerbarbtnbg0].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg0].visible, false));
      tween(layer[roundcornerbarbtnbg1].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg1].visible, false));
      tween(layer[roundcornerbarbtnbg2].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg2].visible, false));
      tween(layer[roundcornerbarbtnbg3].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg3].visible, false));
      tween(layer[roundcornerbarbtnbg4].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg4].visible, false));
      tween(layer[roundcornerbarbtnbg5].alpha, 0, 0.5, easeOutQuad, set(layer[roundcornerbarbtnbg5].visible, false));
    );

      set(layer[roundcornerbarbtn_showcontrols].visible, true);
      set(layer[roundcornerbarbtn_hidecontrols].visible, false);
      set(layer[roundcornerbarbtn_in].visible, false);
      set(layer[roundcornerbarbtn_out].visible, false);
      set(layer[roundcornerbarbtn_up].visible, false);
      set(layer[roundcornerbarbtn_down].visible, false);
      set(layer[roundcornerbarbtn_left].visible, false);
      set(layer[roundcornerbarbtn_right].visible, false);


      ifnot(layer[roundcornerbarbtn_prev_pano].disabled,
      if (scene.count GT 1,
        set(layer[roundcornerbarbtn_prev_pano].visible, false);
        set(layer[roundcornerbarbtn_next_pano].visible, false);
      );
      );

    roundcornerbarupdateFullscreenButtons();
	ifnot(layer[roundcornerbarbtn_autorotate_on].disabled,roundcornerbarupdateAutorotationButtons(););


	ifnot(layer[roundcornerbarbtn_ctrlmode_drag_to].disabled,roundcornerbarupdateControlModeButtons(););






	ifnot(layer[roundcornerbarbtn_display_help].disabled,roundcornerbarupdateHelpButtons(););

    if (roundcornerbarnbbuttons GT 0,
      tween(layer[roundcornerbarmenu_roundcorner_bg].rotate, 180, 0.5, easeOutQuad, set(layer[roundcornerbarmenu_roundcorner_bg].visible, false););
    );
  </action>
  <action name="roundcornerbarshowMenuControls">
    set(roundcornerbarIsOpened, true);
    if (roundcornerbarnbbuttons GT 0,
      stoptween(layer[roundcornerbarmenu_roundcorner_bg].rotate);
      stoptween(layer[roundcornerbarbtnbg0].alpha);
      stoptween(layer[roundcornerbarbtnbg1].alpha);
      stoptween(layer[roundcornerbarbtnbg2].alpha);
      stoptween(layer[roundcornerbarbtnbg3].alpha);
      stoptween(layer[roundcornerbarbtnbg4].alpha);
      stoptween(layer[roundcornerbarbtnbg5].alpha);
    );

      set(layer[roundcornerbarbtn_hidecontrols].visible, true);
      set(layer[roundcornerbarbtn_showcontrols].visible, false);


    set(layer[roundcornerbarmenu_roundcorner_bg].visible, true);
    tween(layer[roundcornerbarmenu_roundcorner_bg].rotate, 0, 0.5, easeOutQuad,

      if (roundcornerbarnbbuttons GT 0,
        set(  layer[roundcornerbarbtnbg0].visible, true);
        tween(layer[roundcornerbarbtnbg0].alpha  , 1, 0.5);
        set(  layer[roundcornerbarbtnbg1].visible, true);
        tween(layer[roundcornerbarbtnbg1].alpha  , 1, 0.5);
        set(  layer[roundcornerbarbtnbg2].visible, true);
        tween(layer[roundcornerbarbtnbg2].alpha  , 1, 0.5);
        set(  layer[roundcornerbarbtnbg3].visible, true);
        tween(layer[roundcornerbarbtnbg3].alpha  , 1, 0.5);
        set(  layer[roundcornerbarbtnbg4].visible, true);
        tween(layer[roundcornerbarbtnbg4].alpha  , 1, 0.5);
        set(  layer[roundcornerbarbtnbg5].visible, true);
        tween(layer[roundcornerbarbtnbg5].alpha  , 1, 0.5);
      );

      set(layer[roundcornerbarbtn_in].visible, true);
      set(layer[roundcornerbarbtn_out].visible, true);
      set(layer[roundcornerbarbtn_up].visible, true);
      set(layer[roundcornerbarbtn_down].visible, true);
      set(layer[roundcornerbarbtn_left].visible, true);
      set(layer[roundcornerbarbtn_right].visible, true);


    ifnot(layer[roundcornerbarbtn_prev_pano].disabled,
      if (scene.count GT 1,
        set(layer[roundcornerbarbtn_prev_pano].visible, true);
        set(layer[roundcornerbarbtn_next_pano].visible, true);
      );
    );

      roundcornerbarupdateFullscreenButtons();
	ifnot(layer[roundcornerbarbtn_autorotate_on].disabled,roundcornerbarupdateAutorotationButtons(););


	ifnot(layer[roundcornerbarbtn_ctrlmode_drag_to].disabled,roundcornerbarupdateControlModeButtons(););





	ifnot(layer[roundcornerbarbtn_display_help].disabled,roundcornerbarupdateHelpButtons(););


    );
  </action>


  <layer name="roundcornerbarhelpScreenBg"
          url="%FIRSTXML%/graphics/roundcornerbar/help_screen_bg.png"
          keep="true"
          align="bottomright"
          x="0"
          y="0"
          rotate="-90"
          zorder="97"
          onclick="roundcornerbarcloseHelp();"
          visible="false"
          displayed="false"
          >
  <layer name="roundcornerbarhelpScreen"
         url="%FIRSTXML%/graphics/roundcornerbar/help_screen.png" 
         y="0"
          keep="true"
          align="center"
          x="0"
          zorder="0"
          onclick="roundcornerbarcloseHelp();"
          />
  <layer name="roundcornerbarbtnCloseHelpScreen"
          url="%FIRSTXML%/graphics/roundcornerbar/btn_close_window.png"
          keep="true"
          align="topright"
          x="100"
          y="10"
          zorder="1"
          onclick="roundcornerbarcloseHelp();"
          tooltip="controlBar_roundedhideHelpTip"
          onhover="roundcornerbarshowMenuTooltip();"
         onout="hideTooltip();"
          />
  </layer>
  <action name="roundcornerbardisplayHelp">
	if (device.desktop,
		set(layer[roundcornerbarhelpScreenBg].displayed, true);

	

		roundcornerbarupdateHelpButtons();
	);
  </action>
  <action name="roundcornerbarcloseHelp">
	if (device.desktop,
		set(layer[roundcornerbarhelpScreenBg].displayed, false);
		roundcornerbarupdateHelpButtons();
		

	

	);
  </action>
	<action name="roundcornerbarHideHelpButtons">
		set(layer[roundcornerbarbtn_display_help].visible, false);
		set(layer[roundcornerbarbtn_close_help].visible, false);
		ifnot(layer[roundcornerbarhelpScreenBg].rotate == -90,
			tween(layer[roundcornerbarhelpScreenBg].rotate, -90, 0.7, easeOutQuad, set(layer[roundcornerbarhelpScreenBg].visible, false););
		);
	</action>
	<action name="roundcornerbarShowHelpButtons">
		if (layer[roundcornerbarhelpScreenBg].displayed,
			set(layer[roundcornerbarbtn_close_help].visible, true);
			set(layer[roundcornerbarbtn_display_help].visible, false);
			set(layer[roundcornerbarhelpScreenBg].visible, true);
			ifnot(layer[roundcornerbarhelpScreenBg].rotate == 0,
				tween(layer[roundcornerbarhelpScreenBg].rotate, 0, 0.7);
			);
		,
			set(layer[roundcornerbarbtn_display_help].visible, true);
			set(layer[roundcornerbarbtn_close_help].visible, false);
			ifnot(layer[roundcornerbarhelpScreenBg].rotate == -90,
				tween(layer[roundcornerbarhelpScreenBg].rotate, -90, 0.7, easeOutQuad, set(layer[roundcornerbarhelpScreenBg].visible, false););
			);
		);
	</action>
	<action name="roundcornerbarupdateHelpButtons">
	if (device.desktop,
		set(roundcornerbarDisplayHelpButtons, false);
		if (roundcornerbarIsOpened, set(roundcornerbarDisplayHelpButtons, true););
		if (roundcornerbarDisplayHelpButtons,
			roundcornerbarShowHelpButtons();
		,
			roundcornerbarHideHelpButtons();
		);
	,
		roundcornerbarHideHelpButtons();
	);
	</action>





  <action name="roundcornerbarshowMenuTooltip">
    if (tooltip !== null,
      getmessage(tooltipmess, get(tooltip));
      showTooltip(bottomright, roundcornerbarmenuTooltipStyle, right);
    );
  </action>

  <textstyle name="roundcornerbarmenuTooltipStyle"
             font="Times New Roman"
             fontsize="14"
             bold="true"
             italic="false"
             textcolor="0x000000"
             background="true"
             backgroundcolor="0xffffff"
             border="false"
             alpha="0.8"
             blendmode="normal"
             effect="glow(0xffffff,1,10,60);"
             origin="cursor"
             edge="bottomright"
             textalign="center"
             xoffset="-20"
             yoffset="-20"
             devices="flash"
             noclip="true"/>

  <layer name="roundcornerbarmenuTooltipStyle"
	     keep="true"
	     enabled="false"
	     capture="false"
	     url="%FIRSTXML%/graphics/textfield.swf"
	     align="center"
	     background="false"
	     backgroundcolor="0xffffff"
	     border="false"
	     bordercolor="0xffffff"
	     css="color:#ffffff;font-family:Times New Roman;font-weight:bold;font-size:14px;text-align:right;"
	     width="200"
	     height="20"
	     autoheight="true"
	     edge="right"
	     yoffset="0"
	     xoffset="0"
	     selectable="false"
	     zorder="0"
	     visible="false"
	     html=""
	     devices="html5"
         />


  <!-- ************ -->
  <!-- iControl Bar -->
  <!-- ************ -->


  <krpano theme11barbuilt="false" theme11backgroundwidthwhenclosed="0" theme11backgroundwidthwhenopened="0" theme11IsOpened="false" />
  <events name="theme11events" onxmlcomplete="theme11buildMenuBar();" keep="true"/>
  <action name="theme11buildMenuBar">
    ifnot (theme11barbuilt, theme11buildMenu(); set(theme11barbuilt, true););
  </action>

  <style name="theme11_btn_style"
         keep="true"
         edge="right"
         align="right"
         x="0" y="0"
         width="40" height="40"
         crop="0|0|60|60"
         onovercrop="0|60|60|60"
         ondowncrop="0|120|60|60"
         onhover="showTooltip(bottom, theme11menuTooltipStyle, bottom);"
         onout="hideTooltip();"
         />

  <layer name="theme11_menu_bg"
         keep="true"
         type="container"
         zorder="3"
         width="40"
         height="40"
         align="bottom"
         x="0" y="10"
         maskchildren="true"
         rotate="0"
         visible="false"
         >


    <layer name="theme11btn_ctrlmode_move_to"
            url="%FIRSTXML%/graphics/icontrolbar/btn_move_to.png"
            style="theme11_btn_style"
            tooltip="controlBar_ictrlmodeMoveTip"
            onclick="setControlModeMoveTo();"
            visible="false"
            devices="desktop"
            />
    <layer name="theme11btn_ctrlmode_drag_to"
            url="%FIRSTXML%/graphics/icontrolbar/btn_drag_to.png"
            style="theme11_btn_style"
            tooltip="controlBar_ictrlmodeDragTip"
            onclick="setControlModeDragTo();"
            visible="false"
            devices="desktop"
            />

    <layer name="theme11btn_in"
            url="%FIRSTXML%/graphics/icontrolbar/btn_zoom_in.png"
            ondown="set(fov_moveforce, -1);"
            onup="set(fov_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_izoomInTip"
            devices="desktop"
            />
    <layer name="theme11btn_out"
            url="%FIRSTXML%/graphics/icontrolbar/btn_zoom_out.png"
            ondown="set(fov_moveforce, +1);"
            onup="set(fov_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_izoomOutTip"
            devices="desktop"
            />

    <layer name="theme11btn_left"
            url="%FIRSTXML%/graphics/icontrolbar/btn_move_left.png"
            ondown="set(hlookat_moveforce, -1);"
            onup="set(hlookat_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_imoveLeftTip"
            devices="desktop"
            />
    <layer name="theme11btn_right"
            url="%FIRSTXML%/graphics/icontrolbar/btn_move_right.png"
            ondown="set(hlookat_moveforce, +1);"
            onup="set(hlookat_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_imoveRightTip"
            devices="desktop"
            />

    <layer name="theme11btn_up"
            url="%FIRSTXML%/graphics/icontrolbar/btn_move_up.png"
            ondown="set(vlookat_moveforce, -1);"
            onup="set(vlookat_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_imoveUpTip"
            devices="desktop"
            />
    <layer name="theme11btn_down"
            url="%FIRSTXML%/graphics/icontrolbar/btn_move_down.png"
            ondown="set(vlookat_moveforce, +1);"
            onup="set(vlookat_moveforce, 0);"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_imoveDownTip"
            devices="desktop"
            />



    <layer name="theme11btn_prev_pano"
            url="%FIRSTXML%/graphics/icontrolbar/btn_previous_scene.png"
            onclick="loadPreviousScene();"
            style="theme11_btn_style"
            tooltip="controlBar_iprevSceneTip"
            visible="false"
            />
    <layer name="theme11btn_next_pano"
            url="%FIRSTXML%/graphics/icontrolbar/btn_next_scene.png"
            onclick="loadNextScene();"
            style="theme11_btn_style"
            tooltip="controlBar_inextSceneTip"
            visible="false"
            />



    <layer name="theme11btn_openfs"
            url="%FIRSTXML%/graphics/icontrolbar/btn_enter_fs.png"
            onclick="enterFullscreen();"
            style="theme11_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="controlBar_iopenFsTip"
            />
    <layer name="theme11btn_closefs"
            url="%FIRSTXML%/graphics/icontrolbar/btn_close_fs.png"
            onclick="exitFullscreen();"
            style="theme11_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="controlBar_icloseFsTip"
            />

    <layer name="theme11btn_autorotate_on"
            url="%FIRSTXML%/graphics/icontrolbar/btn_start_autorotation.png"
            onclick="startautorotation();"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_iautorotateOnTip"
            />
    <layer name="theme11btn_autorotate_off"
            url="%FIRSTXML%/graphics/icontrolbar/btn_stop_autorotation.png"
            onclick="stopautorotation();"
            style="theme11_btn_style"
            visible="false"
            tooltip="controlBar_iautorotateOffTip"
            />



    <layer name="theme11btn_display_help"
            url="%FIRSTXML%/graphics/icontrolbar/btn_help.png"
            onclick="theme11displayHelp();"
            style="theme11_btn_style"
            devices="desktop"
            visible="false"
            tooltip="controlBar_idisplayHelpTip"
            />
    <layer name="theme11btn_close_help"
            url="%FIRSTXML%/graphics/icontrolbar/btn_help.png"
            onclick="theme11closeHelp();"
            style="theme11_btn_style"
            visible="false"
            devices="desktop"
            tooltip="controlBar_ihideHelpTip"
            />



    <layer name="theme11btn_hidecontrols"
           url="%FIRSTXML%/graphics/icontrolbar/btn_hide_controls.png"
           style="theme11_btn_style"
           onclick="theme11hideMenuControls();hideTourControls();"
           visible="false"
           tooltip="controlBar_ihideControlsTip"
           />
    <layer name="theme11btn_showcontrols"
           url="%FIRSTXML%/graphics/icontrolbar/btn_show_controls.png"
           style="theme11_btn_style"
           onclick="theme11showMenuControls();showTourControls();"
           tooltip="controlBar_idisplayControlsTip"
           visible="false"
           />
 </layer>




	<events name="theme11controlmodechangedevent" 
		oncontrolmodechanged="theme11updateControlModeButtons();" 
		keep="true" />
	<action name="theme11HideControlModeButtons">
		set(layer[theme11btn_ctrlmode_move_to].visible, false);
		set(layer[theme11btn_ctrlmode_drag_to].visible, false);
	</action>
	<action name="theme11ShowControlModeButtons">
		if (tour_controlmodemousetype == "moveto",
			set(layer[theme11btn_ctrlmode_drag_to].visible, true);
			set(layer[theme11btn_ctrlmode_move_to].visible, false);
		,
			set(layer[theme11btn_ctrlmode_move_to].visible, true);
			set(layer[theme11btn_ctrlmode_drag_to].visible, false);
		);
	</action>
	<action name="theme11updateControlModeButtons">
	if (device.desktop,
		set(theme11DisplayControlModeButtons, false);
		if (theme11IsOpened, set(theme11DisplayControlModeButtons, true););
		if (theme11DisplayControlModeButtons,
			theme11ShowControlModeButtons();
		,
			theme11HideControlModeButtons();
		);
	,
		theme11HideControlModeButtons();
	);
	</action>


  <action name="theme11hideMenuControls">
    set(theme11IsOpened, false);
    set(layer[theme11btn_hidecontrols].visible, false);
    set(layer[theme11btn_showcontrols].visible, true);
if (scene.count GT 1,
	set(layer[theme11btn_next_pano].visible, false);
	set(layer[theme11btn_prev_pano].visible, false);
);


if (device.desktop,
	set(layer[theme11btn_in].visible, false);
	set(layer[theme11btn_out].visible, false);
);
if (device.desktop,
	set(layer[theme11btn_up].visible, false);
	set(layer[theme11btn_down].visible, false);
);
if (device.desktop,
	set(layer[theme11btn_left].visible, false);
	set(layer[theme11btn_right].visible, false);
);
	theme11updateFullscreenButtons();
	theme11updateHelpButtons();


	theme11updateAutorotationButtons();


	theme11updateControlModeButtons();



    set(layer[theme11_menu_bg].width , get(theme11backgroundwidthwhenclosed));
	set(layer[theme11_menu_bg].visible, true);
  </action>
  <action name="theme11showMenuControls">
    set(theme11IsOpened, true);
    set(layer[theme11btn_hidecontrols].visible, true);
    set(layer[theme11btn_showcontrols].visible, false);
	set(layer[theme11_menu_bg].visible, true);
if (scene.count GT 1,
	set(layer[theme11btn_next_pano].visible, true);
	set(layer[theme11btn_prev_pano].visible, true);
);


if (device.desktop,
	set(layer[theme11btn_in].visible, true);
	set(layer[theme11btn_out].visible, true);
);
if (device.desktop,
	set(layer[theme11btn_up].visible, true);
	set(layer[theme11btn_down].visible, true);
);
if (device.desktop,
	set(layer[theme11btn_left].visible, true);
	set(layer[theme11btn_right].visible, true);
);
	theme11updateFullscreenButtons();
	theme11updateHelpButtons();


	theme11updateAutorotationButtons();


	theme11updateControlModeButtons();



    set(layer[theme11_menu_bg].width, get(theme11backgroundwidthwhenopened));
  </action>


  <layer name="theme11helpScreenBg"
         align="center"
         keep="true"
         onclick="theme11closeHelp();"
         url="%FIRSTXML%/graphics/icontrolbar/help_screen_bg.png"
         visible="false"
         rotate="-90"
         height="50%"
         width="prop"
         zorder="97"
         x="100%"
         displayed="false" />
  <layer name="theme11helpScreenFg"
         align="center"
         keep="true"
         onclick="theme11closeHelp();"
         url="%FIRSTXML%/graphics/icontrolbar/help_screen_fg.png"
         height="50%"
         width="prop"
         visible="false"
         rotate="90"
         zorder="98"
         x="-100%" />
  <action name="theme11displayHelp">
  if (device.desktop,
    set(layer[theme11helpScreenBg].displayed,true);
    set(layer[theme11helpScreenBg].visible,true);
    set(layer[theme11helpScreenFg].visible,true);
    tween(layer[theme11helpScreenFg].rotate,0, 1);
    tween(layer[theme11helpScreenBg].rotate,0, 1);
    tween(layer[theme11helpScreenFg].x,0, 1);
    tween(layer[theme11helpScreenBg].x,0, 1);
    theme11updateHelpButtons();
  );
  </action>
  <action name="theme11closeHelp">
  if (device.desktop,
    set(layer[theme11helpScreenBg].displayed,false);
    tween(layer[theme11helpScreenFg].rotate,  90, 1, easeOutQuad, set(layer[helpScreenFg].visible,false););
    tween(layer[theme11helpScreenBg].rotate, -90, 1, easeOutQuad, set(layer[helpScreenBg].visible,false););
    tween(layer[theme11helpScreenFg].x, -100%, 1);
    tween(layer[theme11helpScreenBg].x, 100%, 1);
    theme11updateHelpButtons();
  );
  </action>
	<action name="theme11HideHelpButtons">
		set(layer[theme11btn_display_help].visible, false);
		set(layer[theme11btn_close_help].visible, false);
	</action>
	<action name="theme11ShowHelpButtons">
		if (layer[theme11helpScreenBg].displayed,
			set(layer[theme11btn_close_help].visible, true);
			set(layer[theme11btn_display_help].visible, false);
		,
			set(layer[theme11btn_display_help].visible, true);
			set(layer[theme11btn_close_help].visible, false);
		);
	</action>
	<action name="theme11updateHelpButtons">
	if (device.desktop,
		set(theme11DisplayHelpButtons, false);
		if (theme11IsOpened, set(theme11DisplayHelpButtons, true););
		if (theme11DisplayHelpButtons,
			theme11ShowHelpButtons();
		,
			theme11HideHelpButtons();
		);
	,
		theme11HideHelpButtons();
	);
	</action>




  <events name="theme11menufullscreenchangeevent"
          onenterfullscreen="theme11updateFullscreenButtons();"
          onexitfullscreen="theme11updateFullscreenButtons();"
          keep="true"/>
	<action name="theme11HideFullscreenButtons">
		set(layer[theme11btn_openfs].visible , false);
		set(layer[theme11btn_closefs].visible, false);
	</action>
	<action name="theme11ShowFullscreenButtons">
		if (device.fullscreensupport,
			if(tour_fullscreen,
				set(layer[theme11btn_openfs].visible , false);
				set(layer[theme11btn_closefs].visible, true);
			,
				set(layer[theme11btn_openfs].visible ,true);
				set(layer[theme11btn_closefs].visible,false);
			);
		,
			theme11HideFullscreenButtons();
		);
	</action>
	<action name="theme11updateFullscreenButtons">
		set(theme11DisplayFullscreenButtons, false);
		if (theme11IsOpened, set(theme11DisplayFullscreenButtons, true););
		if (theme11DisplayFullscreenButtons,
			theme11ShowFullscreenButtons();
		,
			theme11HideFullscreenButtons();
		);
	</action>

	<events name="theme11AutorotationEvents"
		onstartautorotation="theme11updateAutorotationButtons();"
		onresumeautorotation="theme11updateAutorotationButtons();"
		onstopautorotation="theme11updateAutorotationButtons();"
		onpauseautorotation="theme11updateAutorotationButtons();"
		keep="true"/>
	<action name="theme11HideAutorotationButtons">
		set(layer[theme11btn_autorotate_off].visible, false);
		set(layer[theme11btn_autorotate_on].visible , false);
	</action>
	<action name="theme11ShowAutorotationButtons">
		if(tour_autorotateenabled==false,
			set(layer[theme11btn_autorotate_off].visible, false);
			set(layer[theme11btn_autorotate_on].visible , true);
		,
			set(layer[theme11btn_autorotate_off].visible, true);
			set(layer[theme11btn_autorotate_on].visible , false);
		);
	</action>
	<action name="theme11updateAutorotationButtons">
		set(theme11DisplayAutorotationButtons, false);
		if (theme11IsOpened, set(theme11DisplayAutorotationButtons, true););
		if (theme11DisplayAutorotationButtons,
			theme11ShowAutorotationButtons();
		,
			theme11HideAutorotationButtons();
		);
	</action>



  <textstyle name="theme11menuTooltipStyle"
             font="Helvetica"
             fontsize="16"
             bold="true"
             italic="false"
             background="false"
             border="false"
             alpha="1"
             textcolor="0x999184"
             effect="dropshadow(2,45,0x999184,4,1);"
             origin="cursor"
             edge="bottom"
             yoffset="-20"
             xoffset="0"
             noclip="true"/>
<layer name="theme11menuTooltipStyle"
	keep="true"
	enabled="false"
	capture="false"
	url="%FIRSTXML%/graphics/textfield.swf"
	align="center"
	background="false"
	backgroundcolor="0x000000"
	backgroundalpha="0.3"
	border="false"
	bordercolor="0xffffff"
	textshadow="2" textshadowrange="10.0" textshadowangle="45" textshadowcolor="0x999184" textshadowalpha="1.0"
	css="color:#999184;font-family:Helvetica;font-weight:bold;font-size:16px;text-align:center;"
	width="200"
	height="20"
	autoheight="true"
		edge="bottom"
	selectable="false"
	zorder="0"
	visible="false"
	html=""
	devices="html5"
/>
  <action name="theme11buildMenu">
    
    set(theme11button_pos, 0);

	set(theme11backgroundwidthwhenclosed, 40);
    set(layer[theme11btn_hidecontrols].x, get(theme11button_pos));
    set(layer[theme11btn_showcontrols].x, get(theme11button_pos));
    inc(theme11button_pos, 45);



      if (device.desktop,
        set(layer[theme11btn_display_help].x, get(theme11button_pos));
        set(layer[theme11btn_close_help].x  , get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

      if (device.fullscreensupport,
        set(layer[theme11btn_openfs].x , get(theme11button_pos));
        set(layer[theme11btn_closefs].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );



      set(layer[theme11btn_autorotate_on].x , get(theme11button_pos));
      set(layer[theme11btn_autorotate_off].x, get(theme11button_pos));
      inc(theme11button_pos, 45);



    if (device.desktop,
      set(layer[theme11btn_ctrlmode_drag_to].x, get(theme11button_pos));
      set(layer[theme11btn_ctrlmode_move_to].x, get(theme11button_pos));
      inc(theme11button_pos, 45);
    );



      if (device.desktop,
        set(layer[theme11btn_right].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
        set(layer[theme11btn_left].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

      if (device.desktop,
        set(layer[theme11btn_down].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
        set(layer[theme11btn_up].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

      if (device.desktop,
        set(layer[theme11btn_out].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
        set(layer[theme11btn_in].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

    if (scene.count GT 1,
        set(layer[theme11btn_next_pano].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
        set(layer[theme11btn_prev_pano].x, get(theme11button_pos));
        inc(theme11button_pos, 45);
      );

      dec(theme11button_pos, 5);

      set(theme11backgroundwidthwhenopened, get(theme11button_pos));
      set(layer[theme11_menu_bg].width, get(theme11backgroundwidthwhenopened));
	
	
	
    </action>

	<events name="theme11StartTourEvents" onTourStart="theme11CallOnStartTour();" keep="true" />
	
	<action name="theme11CallOnStartTour">
		
		theme11showMenuControls();
	</action>

  <!-- Hide / Show Controls -->
  <action name="hideTourControls">set(tour_displaycontrols, false);events.dispatch(hidetourcontrols);</action>
  <action name="showTourControls">set(tour_displaycontrols, true); events.dispatch(showtourcontrols);</action>
  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);set(fullscreen,false);</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);set(fullscreen,true);</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>
</krpano>